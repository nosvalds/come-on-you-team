{"version":3,"sources":["components/Header/Header.js","components/Goal/Goal.js","components/Goal/index.js","components/Defense/Defense.js","components/Defense/index.js","components/Offense/Offense.js","components/Offense/index.js","components/Pitch/Pitch.js","components/TeamInfo/TeamInfo.js","components/Footer/Footer.js","components/PlayerEntry/PlayerEntry.js","components/PlayerEntry/index.js","data/actions/state.js","App.js","data/initialState.js","data/reducer.js","data/store.js","index.js"],"names":["Header","className","Goal","keeperName","connect","state","team","positions","name","Defense","players","map","player","i","key","Offense","Pitch","TeamInfo","Footer","href","icon","faGithubSquare","PlayerEntry","handleSubmit","teamsFilled","useState","playerName","setPlayerName","onSubmit","e","preventDefault","htmlFor","type","id","value","onChange","currentTarget","required","playersASide","team_A","positionsFilled","team_B","dispatch","addPlayer","App","initialState","getRandomInt","min","max","Math","ceil","floor","random","reducer","action","index","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAWeA,EATA,kBACX,4BAAQC,UAAU,eACd,wBAAIA,UAAU,oBACV,0BAAMA,UAAU,gBAAhB,KADJ,OAC+C,0BAAMA,UAAU,gBAAhB,KAD/C,KACwF,0BAAMA,UAAU,gBAAhB,KADxF,cAGA,4GCGOC,EARF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACZ,OACI,6BAASF,UAAU,kBACf,wBAAIA,UAAU,eAAgBE,KCK3BC,eAPS,SAAEC,EAAF,GAEpB,MAAO,CACHF,WAAYE,EAH0B,EAAXC,MAGHC,UAAU,GAAGC,QAI9BJ,CAAyBF,GCQzBO,EAhBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACI,6BAAST,UAAU,qBACbS,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACN,wBACIC,IAAMD,EACNZ,UAAU,eAERW,QCAXR,eAPS,SAAEC,EAAF,GAAuB,IAAZC,EAAW,EAAXA,KAE/B,MAAO,CACHI,QAAS,CAACL,EAAMC,GAAMC,UAAU,GAAGC,KAAMH,EAAMC,GAAMC,UAAU,GAAGC,SAI3DJ,CAAyBK,GCQzBM,EAhBC,SAAC,GAAiB,IAAfL,EAAc,EAAdA,QACf,OACI,6BAAST,UAAU,qBACbS,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACN,wBACIC,IAAMD,EACNZ,UAAU,eAERW,QCAXR,eAPS,SAAEC,EAAF,GAAuB,IAAZC,EAAW,EAAXA,KAE/B,MAAO,CACHI,QAAS,CAACL,EAAMC,GAAMC,UAAU,GAAGC,KAAMH,EAAMC,GAAMC,UAAU,GAAGC,SAI3DJ,CAAyBW,GCUzBC,EAfD,WACV,OACI,6BAASf,UAAU,8BACf,yBAAKA,UAAU,0BACX,kBAAC,EAAD,CAAMK,KAAK,WACX,kBAAC,EAAD,CAASA,KAAK,WACd,kBAAC,EAAD,CAASA,KAAK,WACd,kBAAC,EAAD,CAASA,KAAK,WACd,kBAAC,EAAD,CAASA,KAAK,WACd,kBAAC,EAAD,CAAMA,KAAK,cCHZW,EATE,WAEb,OACI,6BAAShB,UAAU,aACf,sCACA,wC,gBCMGiB,EATA,kBACX,4BAAQjB,UAAU,eACd,oDACA,uBAAGA,UAAU,YAAYkB,KAAK,gDAC1B,kBAAC,IAAD,CAAiBC,KAAOC,S,QC4CrBC,EAlDK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAAkB,EAEfC,mBAAS,IAFM,mBAE5CC,EAF4C,KAEhCC,EAFgC,KAgBnD,OAAUH,EA4BN,wBAAIvB,UAAU,gBAAd,4BA3BA,0BACIA,UAAU,oBACV2B,SATiB,SAACC,GACtBA,EAAEC,iBACFP,EAAaG,GACbC,EAAc,MAQV,6BAAS1B,UAAU,gBACf,2BACI8B,QAAQ,aACR9B,UAAU,qBAFd,eAMA,2BACI+B,KAAK,OACLC,GAAG,aACHhC,UAAU,oBACViC,MAAQR,EACRS,SA5BK,SAACN,GAClBF,EAAcE,EAAEO,cAAcF,QA4BlBG,UAAQ,KAGhB,4BACIpC,UAAU,eADd,gBCpBGG,eAdS,SAACC,GACrB,IAAIiC,EAAejC,EAAMiC,aACzB,MAAO,CACHd,YAAcnB,EAAMkC,OAAOC,kBAAoBF,GAAgBjC,EAAMoC,OAAOD,kBAAoBF,MAK7E,SAACI,GACxB,MAAO,CACHnB,aAAc,SAACf,GAAD,OAAUkC,ECbP,SAAClC,GACtB,MAAO,CACHwB,KAAM,aACNxB,QDUiCmC,CAAUnC,QAIpCJ,CAA6CkB,GEI7CsB,MAZf,WACE,OACE,0BAAM3C,UAAU,YACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,OC0BW4C,EA5CI,CACjBP,aAAc,EACdC,OAAQ,CACJC,gBAAiB,EACjBjC,UAAW,CACP,CACIC,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,MAIlBiC,OAAQ,CACJD,gBAAiB,EACjBjC,UAAW,CACP,CACIC,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,O,cCrChBsC,EAAe,SAACC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,GAqCtCM,EAPD,SAAChD,EAAOiD,GACpB,OAAQA,EAAOtB,MACb,IAAK,aAAc,OA3BP,SAAZW,EAAatC,EAAOiD,GAExB,IAAIhD,EAA8B,IAAvBwC,EAAa,EAAG,GAAW,SAAW,SAE7CjC,EAAIiC,EAAa,EAAG,GAExB,MAAsC,KAAlCzC,EAAMC,GAAMC,UAAUM,GAAGL,KAEpBmC,EAAUtC,EAAOiD,GAGjB,2BACFjD,GADL,kBAEGC,EAFH,2BAGOD,EAAMC,IAHb,IAIIkC,gBAAiBnC,EAAMC,GAAMkC,gBAAkB,EAC/CjC,UAAWF,EAAMC,GAAMC,UAAUI,KAAI,SAACC,EAAQ2C,GAC5C,OAAOA,IAAU1C,EAAV,2BAAkBD,GAAlB,IAA0BJ,KAAM8C,EAAO9C,OAAvC,eAAmDI,UAUpC+B,CAAUtC,EAAOiD,GAC3C,QAAS,OAAOjD,IC/BdmD,EAAmBC,OAAOC,sCAAwCC,IASzDC,EANDC,YACZR,EACAR,EACAW,K,MCHJM,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAQA,GAChB,kBAAC,IAAMI,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1a1101bb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n    <header className=\"main-header\">\n        <h1 className=\"main-header-text\">\n            <span className=\"accent-color\">C</span>ome <span className=\"accent-color\">O</span>n <span className=\"accent-color\">Y</span>ou _____ !\n        </h1>\n        <p>Add players to the pitch to assign them randomly to 5-a-side football teams</p>\n    </header>\n)\n\nexport default Header;","import React from 'react';\n\nconst Goal = ({ keeperName }) => {\n    return (\n        <section className=\"goal-container\">\n            <h4 className=\"keeper-name\">{ keeperName }</h4>\n        </section>\n    )\n}\n\nexport default Goal;","import { connect } from 'react-redux';\nimport Goal from './Goal';\n\nconst mapStateToProps = ( state, { team }) => {\n    // use team prop to get the goalkeeper from state. For now goalkeeper is always the first player in the positions array\n    return {\n        keeperName: state[team].positions[0].name,\n    };\n}\n\nexport default connect(mapStateToProps)(Goal);","import React from 'react';\n\nconst Defense = ({ players }) => {\n    return (\n        <section className=\"defense-container\">\n            { players.map((player, i) => (\n                    <h4\n                        key={ i }\n                        className=\"player-name\"\n                    >\n                        { player }\n                    </h4>\n                ))\n            }\n        </section>\n    )\n}\n\nexport default Defense;","import { connect } from 'react-redux';\nimport Defense from './Defense';\n\nconst mapStateToProps = ( state, { team }) => {\n    // use team prop to get the defense players from state. For now D players are always the 2nd and 3rd player in the positions array\n    return {\n        players: [state[team].positions[1].name, state[team].positions[2].name ],\n    };\n}\n\nexport default connect(mapStateToProps)(Defense);","import React from 'react';\n\nconst Offense = ({ players }) => {\n    return (\n        <section className=\"offense-container\">\n            { players.map((player, i) => (\n                    <h4\n                        key={ i }\n                        className=\"player-name\"\n                    >\n                        { player }\n                    </h4>\n                ))\n            }\n        </section>\n    )\n}\n\nexport default Offense;","import { connect } from 'react-redux';\nimport Offense from './Offense';\n\nconst mapStateToProps = ( state, { team }) => {\n    // use team prop to get the Offense players from state. For now Offense players are always the 4th and 5th player in the positions array\n    return {\n        players: [state[team].positions[3].name, state[team].positions[4].name ],\n    };\n}\n\nexport default connect(mapStateToProps)(Offense);","import React from 'react';\nimport Goal from '../Goal';\nimport Defense from '../Defense';\nimport Offense from '../Offense';\n\nconst Pitch = () => {\n    return (\n        <section className=\"pitch-container-background\">\n            <div className=\"pitch-container-inside\">\n                <Goal team=\"team_A\"/>\n                <Defense team=\"team_A\" />\n                <Offense team=\"team_A\" />\n                <Offense team=\"team_B\" />\n                <Defense team=\"team_B\" />\n                <Goal team=\"team_B\"/>\n            </div>\n        </section>\n    )\n}\n\nexport default Pitch;","import React from 'react';\n\nconst TeamInfo = () => {\n\n    return (\n        <section className=\"team-info\">\n            <h3>Team A</h3>\n            <h3>Team B</h3>\n        </section>\n    )\n}\nexport default TeamInfo;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons'\n\nconst Footer = () => (\n    <footer className=\"main-footer\">\n        <p>&#169; 2020 Nik Osvalds</p>\n        <a className=\"icon-link\" href=\"https://github.com/nosvalds/come-on-you-team\">\n            <FontAwesomeIcon icon={ faGithubSquare } />\n        </a>\n    </footer>\n)\n\nexport default Footer;","import React, { useState } from 'react';\n\nconst PlayerEntry = ({ handleSubmit, teamsFilled }) => {\n    // useState for the form input control to manage state locally rather than at the app level\n    const [playerName, setPlayerName] = useState(\"\");\n\n    // input is a controlled component\n    const handleChange = (e) => {\n        setPlayerName(e.currentTarget.value);\n    }\n\n    // call handleSubmit and pass the playerName from the input field\n    const handleFormSubmit = (e) => {\n        e.preventDefault(); // prevent page refresh default browser behavior\n        handleSubmit(playerName);\n        setPlayerName(\"\"); // clear out input field once submitted so user can type next player name\n    }\n\n    return ( !teamsFilled ? // if the teams are not full, then show the player entry form\n        <form\n            className=\"player-entry-form\"\n            onSubmit={ handleFormSubmit } \n        >\n            <section className=\"form-section\">\n                <label\n                    htmlFor=\"playerName\"\n                    className=\"player-name-label\"\n                >\n                    Player Name\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"playerName\"\n                    className=\"player-name-input\"\n                    value={ playerName }\n                    onChange={ handleChange }\n                    required\n                />\n            </section>\n            <button\n                className=\"btn-primary\"\n            >\n                Add Player\n            </button>\n        </form>\n        : // once teams are full, game on!\n        <h3 className=\"pitch-header\">\n            Teams Complete, Game On!\n        </h3>\n    )\n}\n\nexport default PlayerEntry;\n","import { connect } from 'react-redux';\nimport PlayerEntry from './PlayerEntry';\nimport { addPlayer } from '../../data/actions/state';\n\n// calculate and pass in whether or not the teams have full rosters of players\nconst mapStateToProps = (state) => {\n    let playersASide = state.playersASide;\n    return {\n        teamsFilled: (state.team_A.positionsFilled === playersASide && state.team_B.positionsFilled === playersASide)\n    };\n}\n\n// dispatch the addPlayer action to assign the player to a team\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSubmit: (name) => dispatch(addPlayer(name)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerEntry);","// state actions\n\nexport const addPlayer = (name) => {\n    return {\n        type: \"ADD_PLAYER\",\n        name\n    }\n}","import React from 'react';\n\n// Standard Components\nimport Header from './components/Header/Header'\nimport Pitch from './components/Pitch/Pitch';\nimport TeamInfo from './components/TeamInfo/TeamInfo';\nimport Footer from './components/Footer/Footer';\n\n// React-Redux (state/dispatch passed from index.js)\nimport PlayerEntry from './components/PlayerEntry';\n\nfunction App() {\n  return (\n    <main className=\"main-app\">\n      <Header />\n      <PlayerEntry />\n      <TeamInfo />\n      <Pitch />\n      <Footer />\n    </main>\n  );\n}\n\nexport default App;\n","const initialState = {\n    playersASide: 5,\n    team_A: {\n        positionsFilled: 0,\n        positions: [\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n        ]\n    },\n    team_B: {\n        positionsFilled: 0,\n        positions: [\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n            {\n                name: \"\"\n            },\n        ]\n    }\n  };\n  \n  export default initialState;","// random integer function\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \n}\n\n\n// randomly add a player to a team\nconst addPlayer = (state, action) => {\n  // pick a random team\n  let team = getRandomInt(1, 2) === 1 ? \"team_A\" : \"team_B\";\n  // pick a random position \n  let i = getRandomInt(0, 4);\n  // only add the player name to the position if it's not already filled\n  if (state[team].positions[i].name !== \"\") {\n    // if already filled call this function again to try another random spot\n    return addPlayer(state, action);\n  } else {\n    // otherwise we've found an empty spot and we can save the players name into the position\n    return {\n      ...state,\n      [team]: {\n        ...state[team],\n        positionsFilled: state[team].positionsFilled + 1, // increment the number of positions filled\n        positions: state[team].positions.map((player, index) => { // save the player name into the randomly selected position\n          return index === i ? {...player, name: action.name} : {...player};\n        })\n      }\n    }\n  }\n}\n\n// Reducer function\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case \"ADD_PLAYER\": return addPlayer(state, action); // add player randomly into a position\n      default: return state;\n    }\n  }\n  \n  export default reducer;","import { createStore, compose } from 'redux';\n\nimport initialState from './initialState';\nimport reducer from './reducer';\n\n  // set up redux dev tools \n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  // store set up\n  const store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers()\n  );\n  \n  export default store;","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './data/store';\n\n// CSS\nimport './css/style.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}